import { useEffect, useCallback } from 'react'
import Head from 'next/head'
import { useWeb3React } from '@web3-react/core'
import { injected } from '../components/wallet/connectors'
import { getERC20Contract } from '../store/contractStore'

import Button from '@mui/material/Button';

import styles from '../styles/Home.module.css'
import useBalance from '../hooks/useBalance';

export const getStaticProps = async () => {

  const surveyRes = await fetch('https://ratherlabs-challenges.s3.sa-east-1.amazonaws.com/survey-sample.json')
  const survey = await surveyRes.json()

  return {
    props: {
      survey: survey
    }
  }

}


export default function Home({survey}) {
  
  const { activate, active, account, chainId, deactivate, error, library } = useWeb3React()

  useEffect(() => {
    if (window !== undefined) {
      Promise.all([window.ethereum.request({
        method: 'wallet_switchEthereumChain',
        params: [{ chainId: '0x3' }], // chainId must be in hexadecimal numbers
      })]);
    }
  }, [])
  
  const connect = useCallback(() => {
    activate(injected)
    localStorage.setItem('previuoslyConnected', true)
  }, [activate])
  
  const disconnect = () => {
    deactivate()
    localStorage.removeItem('previuoslyConnected')
  }
  
  useEffect(() => {
    if (localStorage.getItem('previuoslyConnected') === 'true')
    connect()
  }, [connect])
  
  const blockChainName = chainId === 3 ? 'Ropsten' : 'Otra que no es Ropsten'

  const contractHash = "0x74F0B668Ea3053052DEAa5Eedd1815f579f0Ee03"
  const decimals = 18

  const [balance] = useBalance(
    contractHash,
    decimals
  )

  const contract = getERC20Contract(contractHash, library)

  console.log(contract)
  if (error) {  
    return (
      <>
        <h1>Upps! Hubo un error durante la conexion:</h1>
        <p>{error.message}</p>
      </>
    )
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome ~
          to Web3
        </h1>

        {
          active
            ? 
              <>
                <Button variant="contained" onClick={disconnect}>Desconectar!</Button >
                <h2>
                  Estas conectado a {blockChainName}!
                  <br />
                  Tu cuenta es: {account}
                  <br />
                  Tu balance es: {balance} ETH
                </h2>
              </>
            : <Button variant="contained" onClick={connect}>Conectar!</Button >
        }

        
      </main>
    </div>
  )
}
